import os
import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
from openpyxl.utils import get_column_letter

# 将上传的新旧料号 Excel 文件直接转换成 Python DataFrame 格式
MAPPING_TABLE = pd.DataFrame({
    '旧规格': ['规格', 'SC1133UA', 'SC1134UA', 'SC1134UA', 'SC1134UA', 'SC1134UA', 'SC1134UA', 'SC1134BU', 'SC1134UA', 'SC1134UA', 'SC1134BU', 'SC1134BU', 'SC1134UA', 'SC1138UA', 'SC2442SO', 'SC2442SO', 'SC2442SO', 'SC2442SO', 'SC243XUA', 'SC2430UA', 'SC2402UA', 'SC2526', 'SC2546', 'SC2402UA', 'SC2442UA', 'SC2442UA', 'SC2442UA', 'SC2448UA-N', 'SC2443UA', 'SC2443UA', 'SC2432UA', 'SC2434SO', 'SC2434SO-N', 'SC2434UA', 'SC2436SO', 'SC2436UA', 'SC2242SO', 'SC2642SO', 'SC2242UA', 'SC2462UA', 'SC2464UA', 'SC2448UA-N', 'SC2462UA', 'SC2498CUA-N', 'SC2438UA', 'SC2442UA', 'SC2242UA', 'SC2063UA', '2100', 'KH211', 'KH211', 'SD211VB', 'SC2526VB', 'SC2526VB', 'SC2526VB', 'SC2546VB', 'SC9621VB-A', 'SC9621VB-A', 'SC9621VB', 'SC9621VB-A', 'SC9625VB', 'SC9625VB-L', 'SC9625VB', 'SC9625VB-L', 'SC9675IM-P-HRF00', 'SC9675IM-P-HRF11', 'SC9675IM-P-LRF00', 'SC9675IM-P-LRF01', 'SC9675IM-P-LRF10', 'SC9675VB', 'SC243XCVB-A', 'SC4645VB-12S', 'SC4645VB-5S', 'SC4665VB', 'SC9632VB', 'SC9633VB', 'SC9634VB', 'SC9634VB', 'SC9634VB', 'SD2276', 'SD2276', 'SD2276', 'SD477S', 'SD477S', 'SD477S', 'KH477ST4-G', 'KH477ST4-G', 'SC4643VB-A', 'SC4643VB-A', 'SC4643VB-A', 'SC4643VB-A', 'SC4643VB-P', 'SC4643VB-P', 'SC4643VB-G', 'SC4643VB-G', 'SC4643VB-S', 'SC4643VB-S', 'SC4643VB-S', 'SC1945NB1', 'SC1945NB1', 'SC1645A1', 'SC1645A1', 'S41F1', 'S41F1', 'SC9642TS-EC', 'SC4643VB-G', 'SC4688SA', 'SC4643VB-P', 'SC1002F1', 'SC1245UA', 'SC1445A1', 'SC1645B1', 'SC1645B2', 'SC2432SO-N', 'SC243XUA', 'SC2442SO', 'SC2442SO-N', 'SC2443UA', 'SC2448SO', 'SC2462SO', 'SC2464SO', 'SC2466SO', 'SC2498SO', 'SC2498TSO', 'SC2498UA-N', 'SC4001SE', 'SC4002BU', 'SC4251D3', 'CA-IS23025S', 'CA-IS23050S', 'SC4643VB-S', 'SC4695DC', 'SC60220', 'SC60228DC', 'SC9314UA', 'SC9314UA', 'SC1138SO-N', 'SC1138SO-N', 'SC1134SO-N', 'SC1134SO-N', 'SC1245SO-N', 'SC2033SO-N', 'SC2063SO', 'SC2064SO', 'SC2202SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC2402SO-N', 'SC9641TS-PC', 'SC9641TS-PC', 'SC9641TS', 'SC9641TS', 'NP.SC4688SA-888K', 'SC4688DC', 'SC4688DC', 'SC4688SA', 'SC4688SA', 'SC4688SA-A', 'SC4688SA-A', 'SC4688SA-A', 'SC4688SA-A'],
    '旧品名': ['品名', 'SC1133UA-1133', 'SC1134UA-1134', 'NM.SC1134UA', 'SC1134UA-3144', 'SC1134UA-44E', 'SC1134UA-43F', 'SC1134BU-1134', 'SC1134UA-44E', 'SC1134UA-43F', 'SC1134BU-1134', 'SC1134BU-1134', 'SC1134UA-44L', 'SC1138UA-1138', 'SC2442SO-2442', 'SC2442SO-2442', 'SC2442SO-2442', 'SC2442SO-2442', 'NA.SC243XUA', 'SC2430UA-2430', 'SC2402UA-U18', 'SC2526VB', 'SC2526VB', 'SC2402UA-2402', 'SC2442UA-2442', 'SC2442UA-U18', 'SC2442UA-2442', 'SC2448UA-N-2448', 'SC2443UA-2443', 'SC2443UA-2443', 'SC2432UA-2432', 'SC2434SO-2434', 'SC2434SO-N-2434', 'SC2434UA-2434', 'SC2436SO-2436', 'SC2436UA-2436', 'SC2442SO-2442', 'SC2442SO-2642', 'SC2242UA-2242', 'SC2462UA-2462', 'SC2464UA-2464', 'SC2448UA-2448', 'SC2462UA-2462', 'SC2498CUA-N(SC9915C)-2498C', 'SC2438UA-2438', 'SC2442UA-2442', 'SC2242UA-2242', 'SC2063UA-2063', '2100-A-2100', 'KH211-211', 'KH211-KH211', 'SD211VB-211', 'NR.SC2526VB-2526', 'SC2526VB(11131A-SD-0)-2526', 'SC2526VB-2526', 'SC2546VB-2546', 'NR.SC9621VB-A-9621', 'SC9621VB-A-9621', 'SC9621VB-9621', 'SC9621VB-A(STC9910F)-F-9621', 'SC9625VB-9625', 'SC9625VB-L-9625L', 'NR.SC9625VB(STC9910E)-9625', 'NR.SC9625VB-L-9625L', 'SC9675IM-P-HRF00-9675', 'SC9675IM-P-HRF11-9675', 'SC9675IM-P-LRF00-9675', 'SC9675IM-P-LRF01-9675', 'SC9675IM-P-LRF10-9675', 'SC9675VB(STC9A002B)-9675', 'SC243XCVB-A-243X', 'SC4645VB-4645-12S', 'SC4645VB-4645-5S', 'SC4665VB(STC13103B)-4665', 'SC9632VB-9632', 'SC9633VB-9633', 'SC9634VB-92143', 'SC9634VB-9634', 'SC9634VB-SZ48/029X', 'SD2276(FD1014A)-276', 'SD2276(FD1014A)-KH276', 'SD2276-276', 'SD477S(STC22304B)-477S', 'SD477S(STC22304C)-477S', 'SD477S-477S', 'SD477S-KH477', 'KH477ST4-G(STC22304C)-KH477', 'SC4643VB-A-FFH-L43', 'SC4643VB-A-FFH-L43', 'NF.SC4643VB-A-4643', 'NR.SC4643VB-A-4643', 'SC4643VB-P(STC9D03E)-4643', 'SC4643VB-P(STC9D03E)-4643', 'NF.SC4643VB-G-4643', 'SC4643VB-G-4643', 'SC4643VB-S-4643', 'SC4643VB-S-4643', 'SC4643VB-S-4643', 'SC1945NB1(STC2899AJ)-N603', 'SC1945NB1(STC2899AJ)-N603', 'SC1645A1-1466', 'NF.SC1645A1-1466', 'NF.S41F1-41F', 'S41F1-41F', 'SC9642TS(STC9A001H)-EC-9642', 'SC4643VB-G(STC9D03E)-4643', 'NP.SC4688SA-888K', 'NR.SC4643VB-P(STC9D03E)-4643', 'SC1002F1(STC1002AG)-41F', 'SC1245A3(STC1898AD)-41F', 'SC1445A1-41F', 'SC1645B1-615HA', 'SC1645B2(STC2899AI)-4601', 'SC2432SO-N-2432', 'SC243XUA-243X', 'SC2442SO(2943N1-1)-2442', 'SC2442SO-N(STC9906P)-2442', 'SC2443UA-W(STC9906W)-2443', 'SC2448SO-2448', 'SC2462SO-2462', 'SC2464SO-2464', 'SC2466SO-2466', 'SC2498SO-2498', 'SC2498TSO-2498T', 'SC2498UA-N-2498', 'SC4001SE-4001', 'SC4002BU-4002', 'SC4251D3-4251', 'SC4624SP25B5-CA-CA-IS23025S', 'SC4624SP50B5-CA-CA-IS23050S', 'SC4643VB-S(STC9D03E)-4643', 'SC4695DC-2425', 'SC60220-60220', 'SC60228DC-白板', 'SC9314UA-9201L', 'SC9314UA-9209', 'SC1138SO-N-1138', 'NA.SC1138SO-N', 'SC1134SO-N(STC1002AF)-1134', 'SC1134SO-N-1134', 'SC1245SO-N-1245', 'SC2033SO-N-2033', 'SC2063SO(STC9G001C)-2063', 'SC2064SO-2064', 'SC2202SO-N-2202', 'SC2402SO-N-Ag0.8-2402', 'SC2402SO-N-6571', 'SC2402SO-N-Ag0.8-2402', 'SC2402SO-N（STC9G002A)-G-2402', 'SC2402SO-N（STC9G002B)-G-2402', 'SC2402SO-N-H（STC9H001A）-2402', 'SC2402SO-N-H（STC9H001A）-2402', 'SC2402SO-N（STC9G002A)-G-2402', 'SC2402SO-N（STC9G002B)-G-2402', 'NR.SC9641TS-PC(STC9A001I)-41CPA', 'SC9641TS-PC(STC9A001I)-41CPA', 'SC9641TS-9641', 'SC9641TS-9641', 'SC4688SA', 'SC4688DC-6388', 'SC4688DC-6388', 'NP.SC4688SA-4688', 'NP.SC4688SA-4688', 'SC4688SA-A(STC9D01C)-4688', 'SC4688SA-A(STC9D01C)-4688', 'SC4688SA-A(STC9D01C)-B-4688', 'SC4688SA-A(STC9D01C)-B-4688'],
    '旧晶圆品名': ['晶圆品名', 'STC1898AJ', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AC', 'STC9906R', 'STC9906R', 'STC11102B', 'STC11102B', 'STC9906I', 'STC9906I', 'STC9G002B', 'STC11131A', 'STC11131A', 'STC9G002B', 'STC9906P', 'STC9906P', 'STC11102B', 'STC11102B', 'STC9906W', 'STC11102B', 'STC9906I', 'STC9906M', 'STC9906I', 'STC9906I', 'STC9906M', 'STC9906I', 'STC9906H', 'STC9906H', 'STC9906H', 'STC9906J', 'STC9906J', 'STC9906S', 'STC9906J', 'SC9915C', 'STC9906I', 'STC11102B', 'STC9902E', 'STC9G001C', 'STC9D03E', 'FD1016A', 'FD1016A', 'FD1016A', 'STC9904C', 'STC11131A', 'STC9904C', 'STC9906H', 'STC9910NC-Q', 'STC9910NC-Q', 'STC9910C', 'STC9910F', 'STC9910B', 'STC9910E', 'STC9910E', 'STC9910E', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9906I', 'STC9D06F', 'STC9D06F', 'STC13103B', 'STC9905E', 'STC9905F', 'STC9905G', 'STC9905G', 'STC9905G', 'FD1014A', 'FD1014A', 'FD1002C', 'STC22304B', 'STC22304C', 'STC22304A', 'STC22304B', 'STC22304C', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC2899AJ', 'STC2899AJ', 'STC2899AI', 'STC2899AI', 'STC2899AI', 'STC2899AI', 'STC9A001H', 'STC9D03E', 'STC9D01C', 'STC9D03E', 'STC1002AG', 'STC1898AD', 'STC2899AB', 'STC2899AE', 'STC2899AI', 'STC9906I', 'STC9906I', 'STC11102B', 'STC9906P', 'STC9906W', 'STC9906S', 'STC9906J', 'STC9906J', 'STC9906O', 'SC9915C', 'STC11300C', 'SC9915C', 'STC4001AB', 'STC4000AA', 'STC11401A', 'STC9D06F', 'STC9D06F', 'STC9D03E', 'STC9D01C', 'STC9D04C', 'STC9D04C', 'STC9901AF', 'STC9901AF', 'STC1898AC', 'STC1898AC', 'STC1002AF', 'STC1898AI', 'STC1898AD', 'STC9G001D', 'STC9G001C', 'STC9G001C', 'STC9902E', 'STC9902J', 'STC9902J', 'STC9902J', 'STC9G002A', 'STC9G002B', 'STC9H001A', 'STC9H001A', 'STC9G002A', 'STC9G002B', 'STC9A001I', 'STC9A001I', 'STC9910BN', 'STC9910BN', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C'],
    '新规格': ['规格', 'SC1133UA-BK', 'SC1134UA-BK', 'SC1134UA-BK', 'SC1134UA-BK', 'SC1134UA-BK', 'SC1134UA-BK', 'SC1134BU-TR', 'SC1134S2-BK', 'SC1134S1-BK', 'SC1134BU-TR', 'SC1134BU-TR', 'SC1134UA-BK', 'SC1138UA-BK', 'SC2442SO-TR', 'SC2442SO-TR-Q', 'SC2442SO-TR-Q', 'SC2442SO-TR-Q', 'SC243XUA-BK', 'SC2430UA-BK', 'SC2402UA-BK', 'SC2526VB-SD-BK', 'SC2546VB-AB-BK', 'SC2402UA-BK', 'SC2442UA-BK-Q', 'SC2442UA-BK', 'SC2442UA-BK-Q', 'SC2448UA-N-BK-Q', 'SC2443UA-BK-Q', 'SC2443UA-BK-Q', 'SC2432UA-BK', 'SC2434SO-TR', 'SC2434SO-N-TR', 'SC2434UA-BK', 'SC2436SO-TR', 'SC2436UA-BK', 'SC2242SO-TR-Q', 'SC2242SO-TR-Q', 'SC2242UA-BK-Q', 'SC2462UA-BK', 'SC2464UA-BK', 'SC2448UA-N-BK-Q', 'SC2462UA-BK', 'SC2498CUA-N-BK-Q', 'SC2438UA-BK', 'SC2442UA-BK-Q', 'SC2242UA-BK', 'SC2063UA-BK', '2100', 'SD211VB-BK', 'SD211VB-BK', 'SD211VB-BK', 'SC2526VB-SD-BK', 'SC2526VB-SD-BK', 'SC2526VB-SD-BK', 'SC2546VB-AB-BK', 'SC9621VB-TR-Q', 'SC9621VB-TR-Q', 'SC9621VB-BK', 'SC9621VB-BK', 'SC9625VB-BK', 'SC9625VB-BK', 'SC9625VB-BK', 'SC9625VB-BK', 'SC9675IM-HRF00-TR-Q', 'SC9675IM-HRF11-TR-Q', 'SC9675IM-LRF00-TR-Q', 'SC9675IM-LRF01-TR-Q', 'SC9675IM-LRF10-TR-Q', 'SC9675VB-BK-Q', 'SC243XSO-TR-Q', 'SC4645VB-BK', 'SC4645VB-BK', 'SC4665VB-A-BK', 'SC9632VB-BK', 'SC9633VB-BK', 'SC9634VB-BK', 'SC9634VB-BK', 'SC9634VB-BK', 'SD2276VB-BK', 'SD2276VB-BK', 'SD2276VB-BK', 'SD477VB-BK', 'SD477VB-BK', 'SD477VB-BK', 'SD477VB-BK', 'SD477VB-BK', 'SC4643VB-BK-Q', 'SC4643VB-BK-Q', 'SC4643VB-BK-Q', 'SC4643VB-BK-Q', 'SC4643VB-P-BK-Q', 'SC4643VB-P-TR-Q', 'SC4643VB-G-BK-Q', 'SC4643VB-G-BK-Q', 'SC4643VB-S-BK-Q', 'SC4643VB-S-TR-Q', 'SC4643VB-S-BK-Q', 'SC1945B1-BK', 'SC1945NB1', 'SC1645A1-BK', 'SC1645A1', 'SC1845F1-BK', 'S41F1', 'SC9642TS-EC-TR-Q', 'SC4643VB-G-TR-Q', 'SC4688SA-BK-Q', 'SC4643VB-P-TR-Q', 'SC1002F1-BK', 'SC1245A3-BK', 'SC1245A3-BK', 'SC1245A3-BK', 'SC1645B1-BK', 'SC2432SO-N-TR', 'SC243XUA-BK', 'SC2442SO-TR-Q', 'SC2442SO-N-TR-Q', 'SC2443UA-BK-Q', 'SC2448SO-TR-Q', 'SC2462SO-TR', 'SC2464SO-TR', 'SC2466SO-TR', 'SC2498SO-TR-Q', 'SC2498TSO-TR-Q', 'SC2498UA-N-BK-Q', 'SC4001SE', 'SC4002BU-TR', 'SC4251D3-TR', 'CA-IS23025S', 'CA-IS23050S', 'SC4643VB-S-TR-Q', 'SC4688DC-TR', 'SC60220SS-TB', 'SC60228DC-TR', 'SC9314UA-BK', 'SC9314UA-BK', 'SC1138SO-N-TR-Q', 'SC1138SO-N-Q-BK', 'SC1134SO-N-TR', 'SC1134SO-N-TR-Q', 'SC1245SO-N-TR', 'SC2033SO-N-TR', 'SC2063SO-TR', 'SC2064SO-TR', 'SC2202SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC2402SO-N-TR', 'SC9641TS-PC-BK-Q', 'SC9641TS-PC-TR-Q', 'SC9641TS-TR-Q', 'SC9641TS-TR-Q', 'SC4688SA-BK-Q', 'SC4688DC-TR-Q', 'SC4688DC-TR-Q', 'SC4688DC-TR-Q', 'SC4688SA-BK-Q', 'SC4688DC-TR-Q', 'SC4688SA-BK-Q', 'SC4688DC-TR-Q', 'SC4688SA-BK-Q'],
    '新品名': ['品名', 'SC1133UA-CJ-00AK-1133', 'SC1134UA-CI-00AK-1134', 'NM.SC1134UA-CI-00AK', 'SC1134UA-CI-00AK-3144', 'SC1134UA-CI-00AK-44E', 'SC1134UA-CI-00AK-43F', 'SC1134BU-CI-00AR-1134', 'SC1134S2-CI-00AK-44E', 'SC1134S1-CI-00AK-43F', 'SC1134BU-CI-00LR-1134', 'SC1134BU-CI-00CR-1134', 'SC1134UA-CI-00AK-44L', 'SC1138UA-CC-00AK-1138', 'SC2442SO-CR-10CR-2442', 'SC2442SO-Q-CR-1XCX-2442', 'SC2442SO-Q-DB-60CR-NM', 'SC2442SO-Q-DB-60CR-2442', 'NM.SC243XUA-CI-10AK', 'SC2430UA-CI-10AK-2430', 'SC2402UA-GB-0XAK-U18', 'SC2526VB-SD-DA-00AK-2526', 'SC2546VB-AB-DA-00AK-2546', 'SC2402UA-GB-0XAK-2402', 'SC2442UA-Q-CP-10AK-2442', 'SC2442UA-CP-10AK-U18', 'SC2442UA-Q-DB-60AK-2442', 'SC2448UA-N-Q-DB-60AK-2448', 'SC2443UA-Q-CW-10AK-2443', 'SC2443UA-Q-DB-60AK-2443', 'SC2432UA-CI-10AK-2432', 'SC2434SO-CM-10CR-2434', 'SC2434SO-N-CI-10CR-2434', 'SC2434UA-CI-10AK-2434', 'SC2436SO-CM-10CR-2436', 'SC2436UA-CI-10AK-2436', 'SC2242SO-Q-CH-10CR-2242', 'SC2242SO-Q-CH-10CR-2642', 'SC2242UA-Q-CH-10AK-2242', 'SC2462UA-CJ-10AK-2462', 'SC2464UA-CJ-10AK-2464', 'SC2448UA-N-Q-CS-10AK-2448', 'SC2462UA-CJ-10AK-6472', 'SC2498CUA-N-CC-30CK-2498C', 'SC2438UA-CI-10AK-2438', 'NM.SC2442UA-Q-DB-60AK', 'SC2242UA-CE-00AK-2242', 'SC2063UA-GC-00AK-2063', '2100-A-2100', 'SD211VB-CA-90AK-211', 'SD211VB-CA-90AK-KH211', 'SD211VB-CA-90AK-211', 'SC2526VB-SD-DA-00AK-2526', 'SC2526VB-SD-DA-00AK-2526', 'SC2526VB-SD-DA-00AK-2526', 'SC2546VB-AB-DA-00AK-2546', 'SC9621VB-Q-CN-4XCR-9621', 'SC9621VB-Q-CN-4XCR-9621', 'SC9621VB-CF-00CK-9621', 'SC9621VB-CF-00CK-9621', 'SC9625VB-CE-00CK-9625L', 'SC9625VB-CE-00CK-9625L', 'SC9625VB-CE-00CK-9625L', 'SC9625VB-CE-00CK-9625L', 'SC9675IM-HRF00-Q-AB-4XAR-9675', 'SC9675IM-HRF11-Q-AB-4XAR-9675', 'SC9675IM-LRF00-Q-AB-4XAR-9675', 'SC9675IM-LRF01-Q-AB-4XAR-9675', 'SC9675IM-LRF10-Q-AB-4XAR-9675', 'SC9675VB-Q-AB-4XCK-9675', 'SC243XSO-Q-CM-10CR-243X', 'SC4645VB-DF-00CK-4645', 'SC4645VB-DF-00CK-4645', 'SC4665VB-A-HB-33CK-4665', 'SC9632VB-CE-00CK-9632', 'SC9633VB-CF-00CK-9633', 'SC9634VB-CG-00CK-92143', 'SC9634VB-CG-00CK-9634', 'SC9634VB-CG-00CK-SZ48', 'SD2276VB-CA-00AK-276', 'SD2276VB-CA-00AK-KH276', 'SD2276VB-CA-00AK-276', 'SD477VB-GC-90AK-477S', 'SD477VB-GC-90AK-477S', 'SD477VB-GC-90AK-477S', 'SD477VB-GC-90AK-KH477', 'SD477VB-GC-90AK-KH477', 'SC4643VB-Q-DE-40CK-FFH-L43', 'NF.SC4643VB-Q-DE-FFH-L43', 'NF.SC4643VB-Q-DE-4643', 'SC4643VB-Q-DE-40CK-4643', 'SC4643VB-P-Q-DE-40CK-4643', 'SC4643VB-P-Q-DE-40CR-4643', 'NF.SC4643VB-G-Q-DE-4643', 'SC4643VB-G-Q-DE-40CK-4643', 'SC4643VB-S-Q-DE-40CK-4643', 'SC4643VB-S-Q-DE-40CR-4643', 'NF.SC4643VB-S-Q-DE-4643', 'SC1945B1-AJ-00HK-N603', 'NF.SC1945NB1(STC2899AJ)-N603', 'SC1645A1-AI-00HK-1466', 'NF.SC1645A1-1466', 'SC1845F1-AI-00HK-41F', 'NF.S41F1-41F', 'SC9642TS-EC-Q-AH-4XLR-9642', 'SC4643VB-G-Q-DE-40CR-4643', 'SC4688SA-Q-DC-40CK-888K', 'SC4643VB-P-Q-DE-40CR-4643', 'SC1002F1-CG-00HK-41F', 'SC1245A3-CD-00CK-41F', 'SC1245A3-CD-00CK-41F', 'SC1245A3-CD-00CK-41F', 'SC1645B1-AE-00HK-615HA', 'SC2432SO-N-CI-10CR-2432', 'NM.SC243XUA-CI-10AK', 'SC2442SO-Q-DB-60CR-2442', 'SC2442SO-N-Q-CP-10CR-2442', 'SC2443UA-Q-CW-10AK-2443', 'SC2448SO-Q-CS-10CR-2448', 'SC2462SO-CJ-10CR-2462', 'SC2464SO-CJ-10CR-2464', 'SC2466SO-CO-10CR-2466', 'SC2498SO-Q-DB-60CR-2498', 'SC2498TSO-Q-CC-10CR-2498T', 'SC2498UA-N-Q-CC-30CK-2498', 'SC4001SE-CB-90LR-4001', 'SC4002BU-CA-00CR-4002', 'SC4251D3-GA-00FR-4251', 'SC4624DC-25A-DF-03CR-23025S', 'SC4624DC-50A-DF-03CR-23050S', 'SC4643VB-S-Q-DE-40CR-4643', 'SC4688DC-DC-40AR-2425', 'SC60220SS-DC-00CB-60220', 'SC60228DC-DC-00AR-NM', 'SC9314UA-CF-0XAK-9201L', ' SC9314UA-CF-0XAK-9209', 'SC1138SO-N-Q-CC-00LR-1138', 'NA.SC1138SO-N-Q-CC', 'SC1134SO-N-CF-00LR-1134', 'SC1134SO-N-Q-CI-00LR-1134', 'SC1245SO-N-CD-00NR-1245', 'SC2033SO-N-GD-00NR-2033', 'SC2063SO-GC-00NR-2063', 'SC2064SO-GC-00NR-2064', 'SC2202SO-N-CE-00NR-2202', 'SC2402SO-N-CJ-00NR-2402', 'SC2402SO-N-CJ-00NR-6571', 'SC2402SO-N-CJ-0XLR-2402', 'SC2402SO-N-GA-00NR-2402', 'SC2402SO-N-GB-00NR-2402', 'SC2402SO-N-HA-00NR-2402', 'SC2402SO-N-HA-00LR-2402', 'SC2402SO-N-GA-00LR-2402', 'SC2402SO-N-GB-00LR-2402', 'SC9641TS-PC-Q-AI-10LK-9641PC', 'SC9641TS-PC-Q-AI-10LR-9641PC', 'SC9641TS-Q-CB-10AR-9641', 'SC9641TS-Q-CB-10LR-9641', 'SC4688SA-Q-DC-40CK-888K', 'SC4688DC-Q-DC-40AR-6388', 'SC4688DC-Q-DC-40CR-6388', 'SC4688DC-Q-DC-40AR-4688', 'SC4688SA-Q-DC-40CK-4688', 'SC4688DC-Q-DC-40AR-4688', 'SC4688SA-Q-DC-40CK-4688', 'SC4688DC-Q-DC-40AR-4688', 'SC4688SA-Q-DC-40CK-4688'],
    '新晶圆品名': ['晶圆品名', 'STC1898AJ', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AI', 'STC1898AC', 'STC9906R', 'STC9906R', 'STC11102B', 'STC11102B', 'STC9906I', 'STC9906I', 'STC9G002B', 'STC11131A', 'STC11131A', 'STC9G002B', 'STC9906P', 'STC9906P', 'STC11102B', 'STC11102B', 'STC9906W', 'STC11102B', 'STC9906I', 'STC9906M', 'STC9906I', 'STC9906I', 'STC9906M', 'STC9906I', 'STC9906H', 'STC9906H', 'STC9906H', 'STC9906J', 'STC9906J', 'STC9906S', 'STC9906J', 'SC9915C', 'STC9906I', 'STC11102B', 'STC9902E', 'STC9G001C', 'STC9D03E', 'FD1016A', 'FD1016A', 'FD1016A', 'STC9904C', 'STC11131A', 'STC9904C', 'STC9906H', 'STC9910NC-Q', 'STC9910NC-Q', 'STC9910C', 'STC9910F', 'STC9910B', 'STC9910E', 'STC9910E', 'STC9910E', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9A002B', 'STC9906I', 'STC9D06F', 'STC9D06F', 'STC13103B', 'STC9905E', 'STC9905F', 'STC9905G', 'STC9905G', 'STC9905G', 'FD1014A', 'FD1014A', 'FD1002C', 'STC22304B', 'STC22304C', 'STC22304A', 'STC22304B', 'STC22304C', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC9D03E', 'STC2899AJ', 'STC2899AJ', 'STC2899AI', 'STC2899AI', 'STC2899AI', 'STC2899AI', 'STC9A001H', 'STC9D03E', 'STC9D01C', 'STC9D03E', 'STC1002AG', 'STC1898AD', 'STC2899AB', 'STC2899AE', 'STC2899AI', 'STC9906I', 'STC9906I', 'STC11102B', 'STC9906P', 'STC9906W', 'STC9906S', 'STC9906J', 'STC9906J', 'STC9906O', 'SC9915C', 'STC11300C', 'SC9915C', 'STC4001AB', 'STC4000AA', 'STC11401A', 'STC9D06F', 'STC9D06F', 'STC9D03E', 'STC9D01C', 'STC9D04C', 'STC9D04C', 'STC9901AF', 'STC9901AF', 'STC1898AC', 'STC1898AC', 'STC1002AF', 'STC1898AI', 'STC1898AD', 'STC9G001D', 'STC9G001C', 'STC9G001C', 'STC9902E', 'STC9902J', 'STC9902J', 'STC9902J', 'STC9G002A', 'STC9G002B', 'STC9H001A', 'STC9H001A', 'STC9G002A', 'STC9G002B', 'STC9A001I', 'STC9A001I', 'STC9910BN', 'STC9910BN', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C', 'STC9D01C'],
})

CONFIG = {
    "output_file": f"运营数据订单-在制-库存汇总报告_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx",
    "selected_month": None,
    "pivot_config": {
        "赛卓-未交订单.xlsx": {
            "index": ["晶圆品名", "规格", "品名"],
            "columns": "预交货日",
            "values": ["订单数量", "未交订单数量"],
            "aggfunc": "sum",
            "date_format": "%Y-%m"
        },
        "赛卓-成品在制.xlsx": {
            "index": ["工作中心", "封装形式", "晶圆型号", "产品规格", "产品品名"],
            "columns": "预计完工日期",
            "values": ["未交"],
            "aggfunc": "sum",
            "date_format": "%Y-%m"
        },
        "赛卓-CP在制.xlsx": {
            "index": ["晶圆型号", "产品品名"],
            "columns": "预计完工日期",
            "values": ["未交"],
            "aggfunc": "sum",
            "date_format": "%Y-%m"
        },
        "赛卓-成品库存.xlsx": {
            "index": ["WAFER品名", "规格", "品名"],
            "columns": "仓库名称",
            "values": ["数量"],
            "aggfunc": "sum"
        },
        "赛卓-晶圆库存.xlsx": {
            "index": ["WAFER品名", "规格"],
            "columns": "仓库名称",
            "values": ["数量"],
            "aggfunc": "sum"
        }
    }
}

def process_date_column(df, date_col, date_format):
    if pd.api.types.is_numeric_dtype(df[date_col]):
        df[date_col] = df[date_col].apply(lambda x: datetime(1899, 12, 30) + timedelta(days=float(x)))
    else:
        df[date_col] = pd.to_datetime(df[date_col], errors='coerce')
    df[f'{date_col}_年月'] = df[date_col].dt.strftime(date_format)
    return df

def apply_mapping_and_merge(df, mapping_df):
    # 去掉空值
    mapping_df = mapping_df.dropna()
    
    # 按三列去 merge
    df = df.merge(
        mapping_df,
        how='left',
        left_on=['晶圆品名', '规格', '品名'],
        right_on=['旧晶圆品名', '旧规格', '旧品名']
    )
    
    # 只在三列都匹配时才替换
    df['晶圆品名'] = df['新晶圆品名'].combine_first(df['晶圆品名'])
    df['规格'] = df['新规格'].combine_first(df['规格'])
    df['品名'] = df['新品名'].combine_first(df['品名'])
    
    # 删除多余列
    df.drop(columns=['旧晶圆品名', '旧规格', '旧品名', '新晶圆品名', '新规格', '新品名'], inplace=True)
    
    # 分组聚合（非数值列作为 index，数值列求和）
    group_cols = [col for col in df.columns if col not in df.select_dtypes(include='number').columns]
    agg_cols = df.select_dtypes(include='number').columns.tolist()
    df_merged = df.groupby(group_cols, as_index=False)[agg_cols].sum()
    
    return df_merged

def create_pivot(df, config, filename):
    if 'date_format' in config:
        config = config.copy()
        config['columns'] = f"{config['columns']}_年月"
    pivoted = pd.pivot_table(df, index=config['index'], columns=config['columns'], values=config['values'],
                             aggfunc=config['aggfunc'], fill_value=0)
    pivoted.columns = [f"{col[0]}_{col[1]}" if isinstance(col, tuple) else col for col in pivoted.columns]
    pivoted = pivoted.reset_index()
    if filename == "赛卓-未交订单.xlsx":
        if '规格' in pivoted.columns and '品名' in pivoted.columns and '晶圆品名' in pivoted.columns:
            pivoted = apply_mapping_and_merge(pivoted, MAPPING_TABLE)
    if CONFIG['selected_month']:
        history_cols = [col for col in pivoted.columns if '_' in col and col.split('_')[-1][:4].isdigit() and col.split('_')[-1] < CONFIG['selected_month']]
        history_order_cols = [col for col in history_cols if '订单数量' in col and '未交订单数量' not in col]
        history_pending_cols = [col for col in history_cols if '未交订单数量' in col]
        if history_order_cols:
            pivoted['历史订单数量'] = pivoted[history_order_cols].sum(axis=1)
        if history_pending_cols:
            pivoted['历史未交订单数量'] = pivoted[history_pending_cols].sum(axis=1)
        pivoted.drop(columns=history_cols, inplace=True)
        fixed_cols = [col for col in pivoted.columns if col not in ['历史订单数量', '历史未交订单数量']]
        if '历史订单数量' in pivoted.columns:
            fixed_cols.insert(len(config['index']), '历史订单数量')
        if '历史未交订单数量' in pivoted.columns:
            fixed_cols.insert(len(config['index']) + 1, '历史未交订单数量')
        pivoted = pivoted[fixed_cols]
    return pivoted

def adjust_column_width(writer, sheet_name, df):
    worksheet = writer.sheets[sheet_name]
    for idx, col in enumerate(df.columns, 1):
        max_len = df[col].astype(str).str.len().max()
        header_len = len(str(col))
        width = max(max_len, header_len) * 1.2 + 5
        worksheet.column_dimensions[get_column_letter(idx)].width = min(width, 50)

def main():
    st.set_page_config(
        page_title='我是标题',
        page_icon=' ',
        layout='wide'
    )

    with st.sidebar:
        st.title("欢迎来到我的应用")
        st.markdown('---')

    st.title('Excel 数据处理与汇总工具')
    selected_month = st.text_input('请输入截至月份（如 2025-03，可选）')
    CONFIG['selected_month'] = selected_month if selected_month else None
    uploaded_files = st.file_uploader('上传 Excel 文件（最多 5 个）', type=['xlsx'], accept_multiple_files=True)
    if st.button('提交并生成报告') and uploaded_files:
        with pd.ExcelWriter(CONFIG['output_file'], engine='openpyxl') as writer:
            for f in uploaded_files:
                filename = f.name
                if filename not in CONFIG['pivot_config']:
                    st.warning(f"跳过未配置的文件: {filename}")
                    continue
                df = pd.read_excel(f)
                config = CONFIG['pivot_config'][filename]
                if 'date_format' in config and config['columns'] in df.columns:
                    df = process_date_column(df, config['columns'], config['date_format'])
                pivoted = create_pivot(df, config, filename)
                sheet_name = filename[:30].rstrip('.xlsx')
                pivoted.to_excel(writer, sheet_name=sheet_name, index=False)
                adjust_column_width(writer, sheet_name, pivoted)
        with open(CONFIG['output_file'], 'rb') as f:
            st.download_button('下载汇总报告', f, CONFIG['output_file'])

if __name__ == '__main__':
    main()
